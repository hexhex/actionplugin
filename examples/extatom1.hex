
%
% first component:
% testA returns "foo" if c is empty
% testA returns "bar" if c has one member
%
a(X) :- &testA[c](X), guard(X).
b(X) v c(X) :- a(X).

%
% second component:
% testB returns "bar" if n and m together have 1 or less members
% testB returns "foo" if n and m together have 2 members
%
e(X) :- &testB[m,n](X), guard(X).
m(X) v n(X) :- e(X).
m(foo) :- e(foo).
n(foo) :- e(foo).

%
% third component: collect result from lower components:
%
result(X) :- b(X), m(X).

%
% EDB:
%
guard(foo).
guard(bar).


